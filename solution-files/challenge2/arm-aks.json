{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "aksClusterName": {
            "type": "string",
            "defaultValue": "aks101cluster-vmss",
            "metadata": {
                "description": "The name of the Managed Cluster resource."
            }
        },
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "string",
            "metadata": {
                "description": "The location of AKS resource."
            }
        },
        "dnsPrefix": {
            "type": "string",
            "metadata": {
                "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
            }
        },
        "osDiskSizeGB": {
            "type": "int",
            "defaultValue": 0,
            "metadata": {
                "description": "Disk size (in GiB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
            },
            "minValue": 0,
            "maxValue": 1023
        },
        "agentCount": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": "The number of nodes for the cluster. 1 Node is enough for Dev/Test and minimum 3 nodes, is recommended for Production"
            },
            "minValue": 1,
            "maxValue": 100
        },
        "agentVMSize": {
            "type": "string",
            "defaultValue": "Standard_DS2_v2",
            "metadata": {
                "description": "The size of the Virtual Machine."
            }
        },
        "osType": {
            "type": "string",
            "defaultValue": "Linux",
            "allowedValues": [
                "Linux",
                "Windows"
            ],
            "metadata": {
                "description": "The type of operating system."
            }
        },
        "kubernetesVersion": {
            "type": "string",
            "metadata": {
                "description": "Provide the Kubernetes version, i.e. '1.19.1'"
            }
        },
        "vnetId": {
            "type": "string",
            "metadata": {
                "description": "Specify the resourceId for the VNet you want AKS get deployed to."
            }
        },
        "nodeSubnetName": {
            "type": "string",
            "metadata": {
                "description": "Name of the subnet the worker nodes will get deployed to"
            }
        },
        "podSubnetName": {
            "type": "string",
            "metadata": {
                "description": "Name of the subnet the pods will get deployed to"
            }
        },
        "serviceCIDR": {
            "type": "string",
            "metadata": {
                "description": "A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges."
            }
        },
        "dockerBridgeCIDR": {
            "type": "string",
            "metadata": {
                "description": "A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range."
            }
        },
        "dnsServiceIP": {
            "type": "string",
            "metadata": {
                "description": "An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr."
            }
        },
        "outboundType": {
            "type": "string",
            "defaultValue": "loadBalancer",
            "metadata": {
                "description": "The outbound (egress) routing method. - loadBalancer or userDefinedRouting."
            },
            "allowedValues": [
                "loadBalancer",
                "userDefinedRouting"
            ]
        }
    },
    "variables": {
        "nodeSubnetId": "[concat(parameters('vnetId'), '/subnets/', parameters('nodeSubnetName'))]",
        "podSubnetId": "[concat(parameters('vnetId'), '/subnets/', parameters('podSubnetName'))]"
    },
    "resources": [
        {
            "apiVersion": "2020-12-01",
            "type": "Microsoft.ContainerService/managedClusters",
            "location": "[parameters('location')]",
            "name": "[parameters('aksClusterName')]",
            "tags": {
                "displayname": "AKS Cluster"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "sku": {
                "name": "Basic",
                "tier": "Free"
            },
            "properties": {
                "kubernetesVersion": "[parameters('kubernetesVersion')]",
                "enableRBAC": true,
                "dnsPrefix": "[parameters('dnsPrefix')]",
                "agentPoolProfiles": [
                    {
                        "name": "agentpool",
                        "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
                        "count": "[parameters('agentCount')]",
                        "vmSize": "[parameters('agentVMSize')]",
                        "osType": "[parameters('osType')]",
                        "type": "VirtualMachineScaleSets",
                        "mode": "System",
                        "maxPods": 110,
                        "vnetSubnetID": "[variables('nodeSubnetId')]",
                        "podSubnetID": "[variables('podSubnetId')]",
                        "maxCount": 10,
                        "minCount": 1,
                        "enableAutoScaling": true
                    }
                ],
                "networkProfile": {
                    "networkPlugin": "azure",
                    "networkPolicy": "azure",
                    "serviceCidr": "[parameters('serviceCIDR')]",
                    "dnsServiceIP": "[parameters('dnsServiceIP')]",
                    "dockerBridgeCidr": "[parameters('dockerBridgeCIDR')]",
                    "outboundType": "[parameters('outboundType')]",
                    "loadBalancerSku": "standard"
                }
            }
        }
    ],
    "outputs": {
        "controlPlaneFQDN": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.ContainerService/managedClusters/', parameters('aksClusterName'))).fqdn]"
        }
    }
}